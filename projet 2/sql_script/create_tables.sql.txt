
--creation de la tale order
CREATE OR REPLACE TABLE raw.orders_raw (
    order_id STRING,
    customer_id STRING,
    order_status STRING,
    order_purchase_timestamp TIMESTAMP,
    order_approved_at TIMESTAMP,
    order_delivered_carrier_date TIMESTAMP,
    order_delivered_customer_date TIMESTAMP,
    order_estimated_delivery_date TIMESTAMP
);

--Charger le fichier depuis le STAGE dans cette table
COPY INTO raw.orders_raw
FROM @brazil_stage/olist_orders_dataset.csv
FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1);

--VÃ©rifie que les donnÃ©es sont bien chargÃ©es
SELECT * FROM raw.orders_raw LIMIT 10;

-- Table orders_raw
CREATE OR REPLACE TABLE raw.orders_raw (
    order_id STRING,
    customer_id STRING,
    order_status STRING,
    order_purchase_timestamp TIMESTAMP,
    order_approved_at TIMESTAMP,
    order_delivered_carrier_date TIMESTAMP,
    order_delivered_customer_date TIMESTAMP,
    order_estimated_delivery_date TIMESTAMP
);
COPY INTO raw.orders_raw
FROM @brazil_stage/olist_orders_dataset.csv
FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1);

-- Table order_items_raw
CREATE OR REPLACE TABLE raw.order_items_raw (
    order_id STRING,
    order_item_id INT,
    product_id STRING,
    seller_id STRING,
    shipping_limit_date TIMESTAMP,
    price FLOAT,
    freight_value FLOAT
);
COPY INTO raw.order_items_raw
FROM @brazil_stage/olist_order_items_dataset.csv
FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1);

-- Table customers_raw
CREATE OR REPLACE TABLE raw.customers_raw (
    customer_id STRING,
    customer_unique_id STRING,
    customer_zip_code_prefix STRING,
    customer_city STRING,
    customer_state STRING
);
COPY INTO raw.customers_raw
FROM @brazil_stage/olist_customers_dataset.csv
FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1);

-- Table products_raw
CREATE OR REPLACE TABLE raw.products_raw (
    product_id STRING,
    product_category_name STRING,
    product_name_lenght INT,
    product_description_lenght INT,
    product_photos_qty INT,
    product_weight_g FLOAT,
    product_length_cm FLOAT,
    product_height_cm FLOAT,
    product_width_cm FLOAT
);
COPY INTO raw.products_raw
FROM @brazil_stage/olist_products_dataset.csv
FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1);

-- Table reviews_raw
CREATE OR REPLACE TABLE raw.reviews_raw (
    review_id STRING,
    order_id STRING,
    review_score INT,
    review_comment_title STRING,
    review_comment_message STRING,
    review_creation_date DATE,
    review_answer_timestamp TIMESTAMP
);
COPY INTO raw.reviews_raw
FROM @brazil_stage/olist_order_reviews_dataset.csv
FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1);

-- Table payments_raw
CREATE OR REPLACE TABLE raw.payments_raw (
    order_id STRING,
    payment_sequential INT,
    payment_type STRING,
    payment_installments INT,
    payment_value FLOAT
);
COPY INTO raw.payments_raw
FROM @brazil_stage/olist_order_payments_dataset.csv
FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1);

-- Table sellers_raw
CREATE OR REPLACE TABLE raw.sellers_raw (
    seller_id STRING,
    seller_zip_code_prefix STRING,
    seller_city STRING,
    seller_state STRING
);
COPY INTO raw.sellers_raw
FROM @brazil_stage/olist_sellers_dataset.csv
FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1);

-- Table geolocation_raw
CREATE OR REPLACE TABLE raw.geolocation_raw (
    geolocation_zip_code_prefix STRING,
    geolocation_lat FLOAT,
    geolocation_lng FLOAT,
    geolocation_city STRING,
    geolocation_state STRING
);
COPY INTO raw.geolocation_raw
FROM @brazil_stage/olist_geolocation_dataset.csv
FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1);

-- VÃ©rifier les commandes
SELECT * FROM raw.orders_raw LIMIT 5;

-- VÃ©rifier les articles de commande
SELECT * FROM raw.order_items_raw LIMIT 5;

-- VÃ©rifier les clients
SELECT * FROM raw.customers_raw LIMIT 5;

-- VÃ©rifier les produits
SELECT * FROM raw.products_raw LIMIT 5;

-- VÃ©rifier les avis
SELECT * FROM raw.reviews_raw LIMIT 5;

-- VÃ©rifier les paiements
SELECT * FROM raw.payments_raw LIMIT 5;

-- VÃ©rifier les vendeurs
SELECT * FROM raw.sellers_raw LIMIT 5;

-- VÃ©rifier les localisations
SELECT * FROM raw.geolocation_raw LIMIT 5;

-- âœ… CLÃ‰S PRIMAIRES
ALTER TABLE analytics.orders_clean ADD PRIMARY KEY (order_id);
ALTER TABLE analytics.customers_clean ADD PRIMARY KEY (customer_id);
ALTER TABLE analytics.products_clean ADD PRIMARY KEY (product_id);
ALTER TABLE analytics.sellers_clean ADD PRIMARY KEY (seller_id);
ALTER TABLE analytics.order_items_clean ADD PRIMARY KEY (order_id, order_item_id);
ALTER TABLE analytics.reviews_clean ADD PRIMARY KEY (review_id);
ALTER TABLE analytics.payments_clean ADD PRIMARY KEY (order_id, payment_sequential);

-- ðŸš« Note : pas de PK pour geolocation_clean (pas de clÃ© unique fiable)

-- âœ… CLÃ‰S Ã‰TRANGÃˆRES
ALTER TABLE analytics.orders_clean
  ADD FOREIGN KEY (customer_id) REFERENCES analytics.customers_clean(customer_id);

ALTER TABLE analytics.order_items_clean
  ADD FOREIGN KEY (order_id) REFERENCES analytics.orders_clean(order_id);

ALTER TABLE analytics.order_items_clean
  ADD FOREIGN KEY (product_id) REFERENCES analytics.products_clean(product_id);

ALTER TABLE analytics.order_items_clean
  ADD FOREIGN KEY (seller_id) REFERENCES analytics.sellers_clean(seller_id);

ALTER TABLE analytics.reviews_clean
  ADD FOREIGN KEY (order_id) REFERENCES analytics.orders_clean(order_id);

ALTER TABLE analytics.payments_clean
  ADD FOREIGN KEY (order_id) REFERENCES analytics.orders_clean(order_id);
